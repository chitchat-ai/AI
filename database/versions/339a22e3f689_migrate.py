"""migrate

Revision ID: 339a22e3f689
Revises: 240c2bb448d9
Create Date: 2023-06-09 14:36:22.828741

"""
from alembic import op
import sqlalchemy as sa
import sqlmodel
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '339a22e3f689'
down_revision = '240c2bb448d9'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        'virtualfriend',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('created', sa.DateTime(), nullable=False),
        sa.Column('modified', sa.DateTime(), nullable=False),
        sa.Column('user_id', sa.Integer(), nullable=False),
        sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.ForeignKeyConstraint(
            ['user_id'],
            ['user.id'],
        ),
        sa.PrimaryKeyConstraint('id'),
    )

    op.drop_constraint('chat_virtual_person_id_fkey', 'chat', type_='foreignkey')  # drop the old foreign key constraint

    op.add_column('chat', sa.Column('virtual_friend_id', sa.Integer(), nullable=False))
    op.add_column('chat', sa.Column('notes', sqlmodel.sql.sqltypes.AutoString(), nullable=False))

    op.create_foreign_key(
        'chat_virtual_person_id_fkey_constr', 'chat', 'virtualfriend', ['virtual_friend_id'], ['id']
    )  # create new foreign key constraint

    op.drop_column('chat', 'virtual_person_id')

    op.drop_table('virtualperson')  # now you can drop the virtualperson table

    op.add_column('user', sa.Column('nickname', sqlmodel.sql.sqltypes.AutoString(), nullable=False))
    op.create_unique_constraint('user_nickname_unique', 'user', ['nickname'])
    # ### end Alembic commands ###

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint('user_nickname_unique', 'user', type_='unique')
    op.drop_column('user', 'nickname')

    op.drop_constraint('chat_virtual_person_id_fkey_constr', 'chat', type_='foreignkey')
    op.add_column('chat', sa.Column('virtual_person_id', sa.INTEGER(), autoincrement=False, nullable=False))
    op.create_foreign_key('chat_virtual_person_id_fkey', 'chat', 'virtualperson', ['virtual_person_id'], ['id'])

    op.drop_column('chat', 'notes')
    op.drop_column('chat', 'virtual_friend_id')

    # Now try dropping the virtualperson table.
    op.create_table(
        'virtualperson',
        sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column('created', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
        sa.Column('modified', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
        sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column('description', sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.ForeignKeyConstraint(['user_id'], ['user.id'], name='virtualperson_user_id_fkey'),
        sa.PrimaryKeyConstraint('id', name='virtualperson_pkey'),
    )

    op.drop_table('virtualfriend')
    # ### end Alembic commands ###
